name: Continuous Integration

on:
  push:
    branches:
      -  '*'
  pull_request:
    branches:
      -  '*'

jobs:
  test:
    name: Run Tests

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3


    - name: Build and run tests
      run: docker compose --profile test up --build --abort-on-container-exit
# jobs:
#   test:
#     name: Build Container and Run Tests
#     runs-on: ubuntu-20.04

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
    
#     - name: Log in to Docker Hub
#       uses: docker/login-action@v3
#       with:
#         username: ${{ vars.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v3
  
#     - name: Build and cache Docker image
#       uses: docker/build-push-action@v5
#       with:
#         context: .
#         push: false
#         load: true        
#         tags: |
#           ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
#           ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
#         cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
#         cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

#     - name: Run tests in container
#       run: |
#         docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} pytest
    
#     - name: Push image if tests pass
#       run: |
#         docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
#         docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
